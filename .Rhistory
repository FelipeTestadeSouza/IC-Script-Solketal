#Y = A0 + A1x1 + A2x2 + A12x1x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Original/Codificada
mod_quad_cod <- rsm(Conversao ~ SO(x1, x2), data = data)
summary(mod_quad_cod)
#Y = A0 + A1x1 + A2x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Sem interação
mod_quad_si <- rsm(Conversao ~ SO(x1, x2) - TWI(x1,x2), data = data)
summary(mod_quad_si)
#Y = A0 + A1x1 + A2x2 + A12x1x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Original/Codificada
mod_quad_cod <- rsm(Conversao ~ SO(x1, x2), data = data)
summary(mod_quad_cod)
#Contour plot - 2D - Codificado
contour.lm(mod_quad_cod, ~ x1+x2,
image = TRUE,
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
xlabs = c("Razão Molar (x1) - Codificado", "Catalisador (x2) - Codificado"))
#Contour plot - 2D - Cod e Ñ Cod
#par(mfrow=c(1,2))
contour.lm(mod_quad_cod, ~ x1+x2,
image = TRUE,
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
xlabs = c("Razão Molar (x1) - Codificado", "Catalisador (x2) - Codificado"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%)", "Razão Molar (acetona:glicerol)"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada")),
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
ar(mgp = c(3, 1, 0)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
par(mgp = c(3, 1, 0)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
par(mgp = c(10, 1, 0)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
par(mgp = c(0, 10, 0)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
par(mgp = c(0, 10, 10)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
par(mgp = c(4, 1, 0))
#Perspective plot - 3D
par(mgp = c(4, 1, 0))
#Perspective plot - 3D
mgp = c(4, 1, 0)
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
mgp = c(4, 1, 0)
zlab = "Conversão (decimal)",
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
mgp = c(4, 1, 0),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
mgp = c(4, 1, 10),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
mgp = c(1, 1, 10),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1,5)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
bounds = list(x2=c(-1.5,1.5),x1=c(-1.5,1,5)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(x2=c(-1.5,1.5),x1=c(-1.5,1,5)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
bounds = list(x2=c(-1.5,1.5),x1=c(-1.5,1.5)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Y = A0 + A1x1 + A2x2 + A12x1x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Original/Codificada
mod_quad_cod <- rsm(Conversao ~ SO(x1, x2), data = data)
summary(mod_quad_cod)
#Data
data <- read_excel("Data.xlsx",4)
data
#Packages
library(readxl)
library(rsm)
#Data
data <- read_excel("Data.xlsx",4)
data
#Data
data <- read_excel("Data.xlsx",3)
data
#Contour plot - 2D - Codificado
contour.lm(mod_quad_cod, ~ x1+x2,
image = TRUE,
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
xlabs = c("Razão Molar (x1) - Codificado", "Catalisador (x2) - Codificado"))
#Contour plot - 2D - Ñ Codificado
contour.lm(mod_quad, ~ Razao_Molar+Catalisador,
image = TRUE,
bounds = list(Razao_Molar=c(1,7),Catalisador=c(0,6)),
xlabs = c("Catalisador (%)", "Razão Molar (acetona:glicerol)"))
#Outliers
qqnorm(data$Conversao)
qqline(data$Conversao)
#Packages
library(readxl)
library(rsm)
#Data
data <- read_excel("Data.xlsx",3)
data
#Packages
library(readxl)
library(rsm)
#Data
data <- read_excel("Data.xlsx",4)
data
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Y = A0 + A1x1 + A2x2 + A12x1x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Original/Codificada
mod_quad_cod <- rsm(Conversao ~ SO(x1, x2), data = data)
summary(mod_quad_cod)
#Y = A0 + A1x1 + A2x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Sem interação
mod_quad_si <- rsm(Conversao ~ SO(x1, x2) - TWI(x1,x2), data = data)
summary(mod_quad_si)
#Contour plot - 2D - Codificado
contour.lm(mod_quad_cod, ~ x1+x2,
image = TRUE,
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
xlabs = c("Razão Molar (x1) - Codificado", "Catalisador (x2) - Codificado"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Packages
library(readxl)
library(rsm)
library(plotly)
#Dados sem a presença de valores discprentes
data <- read_excel("Data.xlsx",3)
data
#Dados sem a presença de valores discprentes
data <- read_excel("Data.xlsx",4)
data
#------ Análise do modelo final
#Modelo final
#Y = A0 + A1x1 + A2x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Sem interação
mod_quad_si <- rsm(Conversao ~ SO(x1, x2) - TWI(x1,x2), data = data)
summary(mod_quad_si)
a <- (0.315284*2)+4
a
b <- (1.261707*2)+3
b
#Packages
library(readxl)
library(rsm)
library(plotly)
#Dados sem a presença de valores discprentes
data <- read_excel("Data.xlsx",4)
data
#------ Análise do modelo final
#Modelo final
#Y = A0 + A1x1 + A2x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Sem interação
mod_quad_si <- rsm(Conversao ~ SO(x1, x2) - TWI(x1,x2), data = data)
summary(mod_quad_si)
sem_out <- 0.535155 + (0.058373*0.315284) + (0.124647*1.261707) + (-0.092573*0.315284*0.315284) + (-0.049396*1.261707*1.261707)
sem_out
#Dados sem a presença de valores discprentes
data <- read_excel("Data.xlsx",3)
data
#Dados sem a presença de valores discprentes
data <- read_excel("Data.xlsx",3)
data
#------ Análise do modelo final
#Modelo final
#Y = A0 + A1x1 + A2x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Sem interação
mod_quad_si <- rsm(Conversao ~ SO(x1, x2) - TWI(x1,x2), data = data)
summary(mod_quad_si)
com_out <- 0.535141 + (0.100892*0.4098708) + (0.165902*1.0619264) + (-0.123078*0.4098708*0.4098708) + (-0.078114*1.0619264*1.0619264)
com_out
sem_out <- 0.535155 + (0.058373*0.315284) + (0.124647*1.261707) + (-0.092573*0.315284*0.315284) + (-0.049396*1.261707*1.261707)
sem_out
com_out <- 0.535141 + (0.100892*0.4098708) + (0.165902*1.0619264) + (-0.123078*0.4098708*0.4098708) + (-0.078114*1.0619264*1.0619264)
com_out
com_out <- 0.535141 + (0.100892*0.4098708) + (0.165902*1.0619264) + (-0.123078*0.4098708*0.4098708) + (-0.078114*1.0619264*1.0619264)
com_out
(com_out - sem_out)/sem_out
(0.315284-0.4098708)/0.4098708
(1.261707-1.0619264)/1.0619264
#Dados sem a presença de valores discprentes
data <- read_excel("Data.xlsx",3)
data
#------ Análise do modelo final
#Modelo final
#Y = A0 + A1x1 + A2x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Sem interação
mod_quad_si <- rsm(Conversao ~ SO(x1, x2) - TWI(x1,x2), data = data)
summary(mod_quad_si)
#Dados sem a presença de valores discprentes
data <- read_excel("Data.xlsx",4)
data
#------ Análise do modelo final
#Modelo final
#Y = A0 + A1x1 + A2x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Sem interação
mod_quad_si <- rsm(Conversao ~ SO(x1, x2) - TWI(x1,x2), data = data)
summary(mod_quad_si)
#Dados sem a presença de valores discprentes
data <- read_excel("Data.xlsx",4)
data
#------ Análise do modelo final
#Modelo final
#Y = A0 + A1x1 + A2x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Sem interação
mod_quad_si <- rsm(Conversao ~ SO(x1, x2) - TWI(x1,x2), data = data)
summary(mod_quad_si)
sem_out <- 0.535155 + (0.058373*0.315284) + (0.124647*1.261707) + (-0.092573*0.315284*0.315284) + (-0.049396*1.261707*1.261707)
sem_out
com_out <- 0.535141 + (0.100892*0.4098708) + (0.165902*1.0619264) + (-0.123078*0.4098708*0.4098708) + (-0.078114*1.0619264*1.0619264)
com_out
(com_out - sem_out)/sem_out
sem_out <- 0.535155 + (0.058373*0.315284) + (0.124647*1.261707) + (-0.092573*0.315284*0.315284) + (-0.049396*1.261707*1.261707)
sem_out
#Packages
library(readxl)
library(rsm)
#Data
data <- read_excel("Data.xlsx",4)
data
#Y = A0 + A1x1 + A2x2 + A12x1x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Original/Codificada
mod_quad_cod <- rsm(Conversao ~ SO(x1, x2), data = data)
summary(mod_quad_cod)
#Contour plot - 2D - Codificado
contour.lm(mod_quad_cod, ~ x1+x2,
image = TRUE,
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
xlabs = c("Razão Molar - Codificado", "Catalisador - Codificado"))
#Perspective plot - 3D
persp.lm(mod_quad_cod, ~x1+x2,
contours = "col",
col = heat.colors(100),
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - Codificada", "Razão Molar (acetona:glicerol) - Codificada"))
#Contour plot - 2D - Codificado
contour.lm(mod_quad_cod, ~ x1+x2,
image = TRUE,
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
xlabs = c("Razão Molar - Codificado", "Catalisador - Codificado"))
#Packages
library(readxl)
library(rsm)
library(plotly)
#Dados sem a presença de valores discprentes
data <- read_excel("Data.xlsx",4)
data
#Dados sem a presença de valores discprentes
data <- read_excel("Data.xlsx",3)
data
#Análise de resíduo
#lm -> Outra função para a análise
fit <- lm(Conversao ~ x1+x2+(x1*x2)+I(x1^2)+I(x2^2), data = data)
summary(fit)
#residuo estudentizado
res <- rstudent(fit)
#homogeneidade de variancias
lmtest::bptest(fit)
#QQplot
car::qqPlot(res)
#QQplot
car::qqPlot(res,
xlab = "Quantis Normalizados",
ylab = "Resíduos")
#Packages
library(readxl)
library(rsm)
library(plotly)
#Dados sem a presença de valores discprentes
data <- read_excel("Data.xlsx",3)
data
#Análise de resíduo
#lm -> Outra função para a análise
fit <- lm(Conversao ~ x1+x2+(x1*x2)+I(x1^2)+I(x2^2), data = data)
summary(fit)
#residuo estudentizado
res <- rstudent(fit)
#homogeneidade de variancias
lmtest::bptest(fit)
#QQplot
car::qqPlot(res,
xlab = "Quantis Normalizados",
ylab = "Resíduos")
#Packages
library(readxl)
library(rsm)
#Dados sem a presença de valores discprentes
data <- read_excel("Data.xlsx",3)
data
#Y = A0 + A1x1 + A2x2 + e -> Modelo linear
mod_l <- rsm(Conversao ~ FO(x1, x2), data = data)
summary(mod_l)
#Y = A0 + A1x1 + A2x2 + A12x1x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Original/Codificada
mod_quad_cod <- rsm(Conversao ~ SO(x1, x2), data = data)
summary(mod_quad_cod)
#Análise de resíduo
#lm -> Outra função para a análise
fit <- lm(Conversao ~ x1+x2+(x1*x2)+I(x1^2)+I(x2^2), data = data)
summary(fit)
#residuo estudentizado
res <- rstudent(fit)
#homogeneidade de variancias
lmtest::bptest(fit)
#QQplot
car::qqPlot(res,
xlab = "Quantis Normalizados",
ylab = "Resíduos")
#------ Análise do modelo final
#Modelo final
#Y = A0 + A1x1 + A2x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Sem interação
mod_quad_si <- rsm(Conversao ~ SO(x1, x2) - TWI(x1,x2), data = data)
summary(mod_quad_si)
fit_final <- lm(Conversao ~ x1+x2+I(x1^2)+I(x2^2), data = data)
summary(fit_final)
#Contour plot - 2D - Cod e Ñ Cod
par(mfrow=c(1,1))
contour.lm(mod_quad_si, ~ x1+x2,
image = TRUE,
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
xlabs = c("Razão Molar (x1) - Codificado", "Catalisador (x2) - Codificado"))
#Perspective plot - 3D
persp.lm(mod_quad_si, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),
#             Catalisador=c(0,6)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%)", "Razão Molar (acetona:glicerol)"))
contour.lm(mod_quad_si, ~ x1+x2,
image = TRUE,
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
xlabs = c("Razão Molar (x1) - Codificado", "Catalisador (x2) - Codificado"))
#Perspective plot - 3D:
persp.lm(mod_quad_si, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),
#             Catalisador=c(0,6)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%)", "Razão Molar (acetona:glicerol)"))
#Pacotes:
library(readxl)
library(rsm)
#Dados sem a presença de valores discprentes:
data <- read_excel("Data.xlsx",3)
data
#Response Surface Method:
#------ Verificação da adequação do modelo
#Y = A0 + A1x1 + A2x2 + e -> Modelo linear
mod_l <- rsm(Conversao ~ FO(x1, x2), data = data)
summary(mod_l)
#Y = A0 + A1x1 + A2x2 + A12x1x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Original/Codificada
mod_quad_cod <- rsm(Conversao ~ SO(x1, x2), data = data)
summary(mod_quad_cod)
#Análise de resíduo:
#lm -> Outra função para a análise
fit <- lm(Conversao ~ x1+x2+(x1*x2)+I(x1^2)+I(x2^2), data = data)
summary(fit)
#residuo estudentizado
res <- rstudent(fit)
#homogeneidade de variancias
lmtest::bptest(fit)
#QQplot:
car::qqPlot(res,
xlab = "Quantis Normalizados",
ylab = "Resíduos")
#------ Análise do modelo final:
#Modelo final:
#Y = A0 + A1x1 + A2x2 + A11x1^2 + A22x2^2 + e -> Modelo Quadratico - Sem interação
mod_quad_si <- rsm(Conversao ~ SO(x1, x2) - TWI(x1,x2), data = data)
summary(mod_quad_si)
fit_final <- lm(Conversao ~ x1+x2+I(x1^2)+I(x2^2), data = data)
summary(fit_final)
#Contour plot - 2D:
par(mfrow=c(1,1))
contour.lm(mod_quad_si, ~ x1+x2,
image = TRUE,
bounds = list(x1=c(-1.5,1.5),x2=c(-1.5,1.5)),
xlabs = c("Razão Molar (x1) - Codificado", "Catalisador (x2) - Codificado"))
#Perspective plot - 3D:
persp.lm(mod_quad_si, ~x1+x2,
contours = "col",
col = heat.colors(100),
#bounds = list(Razao_Molar=c(1,7),
#             Catalisador=c(0,6)),
zlab = "Conversão (decimal)",
xlabs = c("Catalisador (%) - codificado", "Razão Molar (acetona:glicerol) - codificado"))
